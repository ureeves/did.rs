// did. A decentralized identifier parser
// Copyright (c) 2019 Eduardo Leegwater Sim√µes
//
// Licensed under the Apache License, Version 2.0
// <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT
// license <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. All files in the project carrying such notice may not be copied,
// modified, or distributed except according to those terms.

// DID grammar written in PEST style PEG. Translated to PEG from the ABNF rules
// defined in https://w3c-ccg.github.io/did-spec/#generic-did-syntax
pct_encoded   = { "%" ~ ASCII_HEX_DIGIT ~ ASCII_HEX_DIGIT }
shard_char    = { path_char | "/" | "?" }

path_char     = { ASCII_ALPHA | ASCII_DIGIT | "-" | "." | "_" | "~" | "!" |
                  "$" | "&" | "'" | "(" | ")" | "*" | "+" | "," | ";" | "=" |
                  ":" | "@" | pct_encoded }
path_segment  = { path_char* }

query_char    = { shard_char  }
query         = { query_char* }

fragment_char = { shard_char }
fragment      = { fragment_char* }

method_char   = { ASCII_ALPHA_LOWER | ASCII_DIGIT }
method        = { method_char+ }

id_char       = { ASCII_ALPHA | ASCII_DIGIT | "." | "-" | "_" }
id_segment    = { id_char* }

param_char    = { ASCII_ALPHA | ASCII_DIGIT | "." | "-" | "_" | ":" |
                  pct_encoded }
param_name    = { param_char+ }
param_value   = { param_char* }
param         = { param_name ~  ("=" ~ param_value)? }

did           = _{ "did:" ~ method ~ ":" ~
                  (id_segment ~ (":" ~ id_segment )*) ~
                  (";" ~ param)* ~
                  ("/" ~ path_segment)* ~
                  ("?" ~ query)? ~
                  ("#" ~ fragment)? }
